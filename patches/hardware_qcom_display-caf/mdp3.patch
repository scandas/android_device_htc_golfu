diff '--exclude=.git' -Naur a/libhwcomposer/hwc.cpp b/libhwcomposer/hwc.cpp
--- a/libhwcomposer/hwc.cpp	2018-09-22 11:13:06.036434913 +0000
+++ b/libhwcomposer/hwc.cpp	2017-03-08 17:43:37.000000000 +0000
@@ -535,8 +535,13 @@
             }
         }
 
+#ifdef USE_MDP3
+        if (ctx->mFbDev->post(ctx->mFbDev, fbLayer->handle)) {
+             ALOGE("%s: ctx->mFbDev->post fail!", __FUNCTION__);
+#else
         if(!Overlay::displayCommit(ctx->dpyAttr[dpy].fd)) {
             ALOGE("%s: display commit fail for %d dpy!", __FUNCTION__, dpy);
+#endif
             ret = -1;
         }
     }
diff '--exclude=.git' -Naur a/libhwcomposer/hwc_utils.cpp b/libhwcomposer/hwc_utils.cpp
--- a/libhwcomposer/hwc_utils.cpp	2018-09-22 11:13:06.040434890 +0000
+++ b/libhwcomposer/hwc_utils.cpp	2017-03-08 17:43:37.000000000 +0000
@@ -36,6 +36,9 @@
 #include "hwc_qclient.h"
 #include "QService.h"
 #include "comptype.h"
+#ifdef USE_MDP3
+#include <fb_priv.h>
+#endif
 
 using namespace qClient;
 using namespace qService;
@@ -56,6 +59,14 @@
         ALOGE("%s: Error Opening FB : %s", __FUNCTION__, strerror(errno));
         return -errno;
     }
+#ifdef USE_MDP3
+    hw_module_t const *module;
+    if (hw_get_module(GRALLOC_HARDWARE_MODULE_ID, &module) == 0) {
+        framebuffer_open(module, &(ctx->mFbDev));
+        private_module_t* m = reinterpret_cast<private_module_t*>(
+                ctx->mFbDev->common.module);
+    }
+#endif
 
     if (ioctl(fb_fd, FBIOGET_VSCREENINFO, &info) == -1) {
         ALOGE("%s:Error in ioctl FBIOGET_VSCREENINFO: %s", __FUNCTION__,
diff '--exclude=.git' -Naur a/libhwcomposer/hwc_utils.h b/libhwcomposer/hwc_utils.h
--- a/libhwcomposer/hwc_utils.h	2018-09-22 11:13:06.040434890 +0000
+++ b/libhwcomposer/hwc_utils.h	2017-03-08 17:43:37.000000000 +0000
@@ -42,6 +42,9 @@
 #define DAEMON_SOCKET "pps"
 //Fwrd decls
 struct hwc_context_t;
+#ifdef USE_MDP3
+struct framebuffer_device_t;
+#endif
 
 namespace ovutils = overlay::utils;
 
@@ -396,6 +399,9 @@
 struct hwc_context_t {
     hwc_composer_device_1_t device;
     const hwc_procs_t* proc;
+#ifdef USE_MDP3
+    framebuffer_device_t *mFbDev;
+#endif
 
     //CopyBit objects
     qhwc::CopyBit *mCopyBit[HWC_NUM_DISPLAY_TYPES];
